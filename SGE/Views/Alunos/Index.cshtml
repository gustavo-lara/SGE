@model IEnumerable<SGE.Models.Aluno>

@{
    ViewData["Title"] = "Index";
    if (Context.Session.GetString("email") != null)
    {
        var sessionEmail = Context.Session.GetString("email");
        var sessionNome = Context.Session.GetString("usuario");
        var sessionTipoUsuarioId = Context.Session.GetString("tipo");
    }


}
<div>
    <div class="d-flex row justify-content-between my-5">
        <div style="width: 15%;">
            <img src="https://placehold.co/200x150" />
        </div>
        <div style="width: 85%;" class="ps-5">
            <div class="d-flex row align-items-center justify-content-between">
                <h1 style="width:25%; font-size:3.2rem; color:#F6D524;">Alunos</h1>
                <div style="height:5px; width:75%; background:#F6D524;" />
            </div>
            <p style="font-size:1.5rem; color:#2E75D3;">Gerencie os alunos cadastrados, registre novos alunos, edite ou delete informações. </p>
        </div>
    </div>

    <div class="d-flex justify-content-between" style="width:100%;">
        <div>
            <div style="width:40%;">

            </div>
            <div style="width:60%;">
                Barra de Pesquisa
            </div>
        </div>
        <div>
           
        </div>
    </div>
</div>


<p>
    <a asp-action="Create">Create New</a>
</p>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UrlFoto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AlunoNome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Matricula)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Celular)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataNascimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CadAtivo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        // Verifica se a imagem existe
                        var filePath = Directory.GetCurrentDirectory() + "\\Data\\Content\\Photo\\" +
                        item.UrlFoto;
                        if (System.IO.File.Exists(filePath))
                        {
                            // Carrega a imagem em memória
                            var imageBytes = await System.IO.File.ReadAllBytesAsync(filePath);
                            var imageBase64 = Convert.ToBase64String(imageBytes);

                            // Exibe a imagem na view
                            <img src="data:image/png;base64,@imageBase64"
                                 alt="Foto do Perfil" height="50" />
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AlunoNome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Matricula)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Celular)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataNascimento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CadAtivo)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AlunoId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.AlunoId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.AlunoId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
